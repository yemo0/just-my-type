---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header class="w-11/12 md:w-3/5 mx-auto">
  <div class="flex h-16 items-center justify-between mb-5">
    <div class="text-2xl font-bold">
      <a href="/">{SITE_TITLE}</a>
      <button accesskey="t" title="(Alt + T)">
        <svg
          id="moon"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentcolor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"></path></svg
        >
        <svg
          id="sun"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentcolor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><circle cx="12" cy="12" r="5"></circle><line
            x1="12"
            y1="1"
            x2="12"
            y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line
            x1="4.22"
            y1="4.22"
            x2="5.64"
            y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"
          ></line><line x1="1" y1="12" x2="3" y2="12"></line><line
            x1="21"
            y1="12"
            x2="23"
            y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"
          ></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg
        >
      </button>
    </div>
    <nav class="hidden md:block">
      <HeaderLink href="/archives">Archive</HeaderLink>
      <HeaderLink href="/tags">Tags</HeaderLink>
      <HeaderLink href="/Docs" target="_blank">Docs</HeaderLink>
      <HeaderLink href="/GitHub" target="_blank">GitHub</HeaderLink>
    </nav>

    <!-- Mobile menu -->
    <button class="md:hidden p-2" id="menu-button">
      <svg
        id="open-menu"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
      </svg>
      <svg
        id="close-menu"
        x-description="Icon when menu is open."
        x-state:on="Menu open"
        x-state:off="Menu closed"
        class="h-6 w-6 hidden"
        :class="{ 'block': open, 'hidden': !(open) }"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <!-- Mobile menu, show/hide based on menu state-->
  <nav class="md:hidden flex flex-col hidden" id="nav">
    <HeaderLink href="/archives" class="mb-2">Archive</HeaderLink>
    <HeaderLink href="/tags" class="mb-2">Tags</HeaderLink>
    <HeaderLink href="/Docs" target="_blank" class="mb-2">Docs</HeaderLink>
    <HeaderLink href="/GitHub" target="_blank" class="mb-2">GitHub</HeaderLink>
  </nav>
</header>

<!-- Dark mode -->
<script defer>
  // Icons
  const sunIcon = document.querySelector("#sun");
  const moonIcon = document.querySelector("#moon");

  // Theme Vars
  const userTheme = localStorage.getItem("theme");
  const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches;

  // Icon Toggling
  const iconToggle = () => {
    moonIcon.classList.toggle("hidden");
    sunIcon.classList.toggle("hidden");
  };

  // Initial Theme Check
  const initTheme = () => {
    sunIcon.classList.add("hidden");
    moonIcon.classList.add("hidden");
    if (userTheme === "dark" || (!userTheme && systemTheme)) {
      document.documentElement.classList.add("dark");
      sunIcon.classList.remove("hidden");
      return;
    }
    moonIcon.classList.remove("hidden");
  };

  // Manual Theme Switch
  const themeSwitch = () => {
    if (document.documentElement.classList.contains("dark")) {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
      iconToggle();
      return;
    }
    document.documentElement.classList.add("dark");
    localStorage.setItem("theme", "dark");
    iconToggle();
  };

  // call theme switch on clicking buttons
  sunIcon.addEventListener("click", () => {
    themeSwitch();
  });
  moonIcon.addEventListener("click", () => {
    themeSwitch();
  });

  // invoke theme check on initial load
  initTheme();
</script>

<!-- Mobile Menu -->
<script>
  // Open Menu
  const openMenu = document.querySelector("#open-menu");
  // Close Menu
  const closeMenu = document.querySelector("#close-menu");
  // Nav
  const nav = document.querySelector("#nav");
  // Menu Button
  const menuButton = document.querySelector("#menu-button");

  // Menu Toggling
  const MenuToggling = () => {
    openMenu?.classList.toggle("hidden");
    closeMenu?.classList.toggle("hidden");
    nav?.classList.toggle("hidden");
  };
  menuButton?.addEventListener("click", () => {
    MenuToggling();
  });
</script>
